.TH "mlpack::optimization::ExponentialSchedule" 3 "Sat Mar 14 2015" "Version 1.0.12" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::optimization::ExponentialSchedule \- 
.PP
The exponential cooling schedule cools the temperature T at every step according to the equation\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBExponentialSchedule\fP (const double \fBlambda\fP=0\&.001)"
.br
.ti -1c
.RI "double \fBLambda\fP () const "
.br
.RI "\fIGet the cooling speed, lambda\&. \fP"
.ti -1c
.RI "double & \fBLambda\fP ()"
.br
.RI "\fIModify the cooling speed, lambda\&. \fP"
.ti -1c
.RI "double \fBNextTemperature\fP (const double currentTemperature, const double)"
.br
.RI "\fIReturns the next temperature given current status\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "double \fBlambda\fP"
.br
.RI "\fIThe cooling speed\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
The exponential cooling schedule cools the temperature T at every step according to the equation\&. 

\[ T_{n+1} = (1-\lambda) T_{n} \]
.PP
where $ 0<\lambda<1 $ is the cooling speed\&. The smaller $ \lambda $ is, the slower the cooling speed, and better the final result will be\&. Some literature uses $ \alpha = (-1 \lambda) $ instead\&. In practice, $ \alpha $ is very close to 1 and will be awkward to input (e\&.g\&. alpha = 0\&.999999 vs lambda = 1e-6)\&. 
.PP
Definition at line 34 of file exponential_schedule\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "mlpack::optimization::ExponentialSchedule::ExponentialSchedule (const doublelambda = \fC0\&.001\fP)\fC [inline]\fP"

.PP
Definition at line 42 of file exponential_schedule\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "double mlpack::optimization::ExponentialSchedule::Lambda () const\fC [inline]\fP"

.PP
Get the cooling speed, lambda\&. 
.PP
Definition at line 59 of file exponential_schedule\&.hpp\&.
.PP
References lambda\&.
.SS "double& mlpack::optimization::ExponentialSchedule::Lambda ()\fC [inline]\fP"

.PP
Modify the cooling speed, lambda\&. 
.PP
Definition at line 61 of file exponential_schedule\&.hpp\&.
.PP
References lambda\&.
.SS "double mlpack::optimization::ExponentialSchedule::NextTemperature (const doublecurrentTemperature, const double)\fC [inline]\fP"

.PP
Returns the next temperature given current status\&. The current system's energy is not used in this calculation\&.
.PP
\fBParameters:\fP
.RS 4
\fIcurrentTemperature\fP Current temperature of system\&. 
.br
\fIcurrentEnergy\fP Current energy of system (not used)\&. 
.RE
.PP

.PP
Definition at line 51 of file exponential_schedule\&.hpp\&.
.PP
References lambda\&.
.SH "Member Data Documentation"
.PP 
.SS "double mlpack::optimization::ExponentialSchedule::lambda\fC [private]\fP"

.PP
The cooling speed\&. 
.PP
Definition at line 65 of file exponential_schedule\&.hpp\&.
.PP
Referenced by Lambda(), and NextTemperature()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
