.TH "mlpack::amf::NMFMultiplicativeDivergenceUpdate" 3 "Sat Mar 14 2015" "Version 1.0.12" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::amf::NMFMultiplicativeDivergenceUpdate \- 
.PP
This follows a method described in the paper 'Algorithms for Non-negative Matrix Factorization' by D\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBNMFMultiplicativeDivergenceUpdate\fP ()"
.br
.ti -1c
.RI "template<typename MatType > void \fBInitialize\fP (const MatType &dataset, const size_t rank)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "template<typename MatType > static void \fBHUpdate\fP (const MatType &V, const arma::mat &W, arma::mat &H)"
.br
.RI "\fIThe update rule for the encoding matrix H\&. \fP"
.ti -1c
.RI "template<typename MatType > static void \fBWUpdate\fP (const MatType &V, arma::mat &W, const arma::mat &H)"
.br
.RI "\fIThe update rule for the basis matrix W\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
This follows a method described in the paper 'Algorithms for Non-negative Matrix Factorization' by D\&. 

D\&. Lee and H\&. S\&. Seung\&. This is a multiplicative rule that ensures that the Kullbackâ€“Leibler divergence $ \sum_i \sum_j (V_{ij} log\frac{V_{ij}}{(WH)_{ij}}-V_{ij}+(WH)_{ij}) $ is non-increasing between subsequent iterations\&. Both of the update rules for W and H are defined in this file\&.
.PP
This set of update rules is not meant to work with sparse matrices\&. Using sparse matrices often causes NaNs in the output, so other choices of update rules are better in that situation\&. 
.PP
Definition at line 34 of file nmf_mult_div\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "mlpack::amf::NMFMultiplicativeDivergenceUpdate::NMFMultiplicativeDivergenceUpdate ()\fC [inline]\fP"

.PP
Definition at line 38 of file nmf_mult_div\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename MatType > static void mlpack::amf::NMFMultiplicativeDivergenceUpdate::HUpdate (const MatType &V, const arma::mat &W, arma::mat &H)\fC [inline]\fP, \fC [static]\fP"

.PP
The update rule for the encoding matrix H\&. The formula used is \[ H_{a\mu} \leftarrow H_{a\mu} \frac{\sum_{i} W_{ia} V_{i\mu}/(WH)_{i\mu}} {\sum_{k} H_{ka}} \] The function takes in all the matrices and only changes the value of the H matrix\&.
.PP
\fBParameters:\fP
.RS 4
\fIV\fP Input matrix to be factorized\&. 
.br
\fIW\fP Basis matrix\&. 
.br
\fIH\fP Encoding matrix to updated\&. 
.RE
.PP

.PP
Definition at line 103 of file nmf_mult_div\&.hpp\&.
.SS "template<typename MatType > void mlpack::amf::NMFMultiplicativeDivergenceUpdate::Initialize (const MatType &dataset, const size_trank)\fC [inline]\fP"

.PP
Definition at line 41 of file nmf_mult_div\&.hpp\&.
.SS "template<typename MatType > static void mlpack::amf::NMFMultiplicativeDivergenceUpdate::WUpdate (const MatType &V, arma::mat &W, const arma::mat &H)\fC [inline]\fP, \fC [static]\fP"

.PP
The update rule for the basis matrix W\&. The formula used is \[ W_{ia} \leftarrow W_{ia} \frac{\sum_{\mu} H_{a\mu} V_{i\mu}/(WH)_{i\mu}} {\sum_{\nu} H_{a\nu}} \] The function takes in all the matrices and only changes the value of the W matrix\&.
.PP
\fBParameters:\fP
.RS 4
\fIV\fP Input matrix to be factorized\&. 
.br
\fIW\fP Basis matrix to be updated\&. 
.br
\fIH\fP Encoding matrix\&. 
.RE
.PP

.PP
Definition at line 61 of file nmf_mult_div\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
