.TH "mlpack::amf::SVDBatchLearning" 3 "Sat Mar 14 2015" "Version 1.0.12" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::amf::SVDBatchLearning \- 
.PP
This class implements SVD batch learning with momentum\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSVDBatchLearning\fP (double \fBu\fP=0\&.0002, double \fBkw\fP=0, double \fBkh\fP=0, double \fBmomentum\fP=0\&.9, double \fBmin\fP=-DBL_MIN, double \fBmax\fP=DBL_MAX)"
.br
.RI "\fISVD Batch learning constructor\&. \fP"
.ti -1c
.RI "template<typename MatType > void \fBHUpdate\fP (const MatType &V, const arma::mat &W, arma::mat &H)"
.br
.RI "\fIThe update rule for the encoding matrix H\&. \fP"
.ti -1c
.RI "template<typename MatType > void \fBInitialize\fP (const MatType &dataset, const size_t rank)"
.br
.ti -1c
.RI "template<typename MatType > void \fBWUpdate\fP (const MatType &V, arma::mat &W, const arma::mat &H)"
.br
.RI "\fIThe update rule for the basis matrix W\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "double \fBkh\fP"
.br
.ti -1c
.RI "double \fBkw\fP"
.br
.ti -1c
.RI "double \fBmax\fP"
.br
.ti -1c
.RI "arma::mat \fBmH\fP"
.br
.ti -1c
.RI "double \fBmin\fP"
.br
.ti -1c
.RI "double \fBmomentum\fP"
.br
.ti -1c
.RI "arma::mat \fBmW\fP"
.br
.ti -1c
.RI "double \fBu\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class implements SVD batch learning with momentum\&. 

This procedure is described in the paper 'A Guide to singular Value Decomposition' by Chih-Chao Ma\&. Class implements 'Algorithm 4' given in the paper\&. This factorizer decomposes the matrix V into two matrices W and H such that sum of sum of squared error between V and W*H is minimum\&. This optimization is performed with gradient descent\&. To make gradient descent faster momentum is added\&. 
.PP
Definition at line 29 of file svd_batch_learning\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "mlpack::amf::SVDBatchLearning::SVDBatchLearning (doubleu = \fC0\&.0002\fP, doublekw = \fC0\fP, doublekh = \fC0\fP, doublemomentum = \fC0\&.9\fP, doublemin = \fC-DBL_MIN\fP, doublemax = \fCDBL_MAX\fP)\fC [inline]\fP"

.PP
SVD Batch learning constructor\&. 
.PP
\fBParameters:\fP
.RS 4
\fIu\fP step value used in batch learning 
.br
\fIkw\fP regularization constant for W matrix 
.br
\fIkh\fP regularization constant for H matrix 
.br
\fImomentum\fP momentum applied to batch learning process 
.RE
.PP

.PP
Definition at line 40 of file svd_batch_learning\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename MatType > void mlpack::amf::SVDBatchLearning::HUpdate (const MatType &V, const arma::mat &W, arma::mat &H)\fC [inline]\fP"

.PP
The update rule for the encoding matrix H\&. The function takes in all the matrices and only changes the value of the H matrix\&.
.PP
\fBParameters:\fP
.RS 4
\fIV\fP Input matrix to be factorized\&. 
.br
\fIW\fP Basis matrix\&. 
.br
\fIH\fP Encoding matrix to be updated\&. 
.RE
.PP

.PP
Definition at line 109 of file svd_batch_learning\&.hpp\&.
.PP
References kh, mH, momentum, and u\&.
.SS "template<typename MatType > void mlpack::amf::SVDBatchLearning::Initialize (const MatType &dataset, const size_trank)\fC [inline]\fP"

.PP
Definition at line 50 of file svd_batch_learning\&.hpp\&.
.PP
References mH, and mW\&.
.SS "template<typename MatType > void mlpack::amf::SVDBatchLearning::WUpdate (const MatType &V, arma::mat &W, const arma::mat &H)\fC [inline]\fP"

.PP
The update rule for the basis matrix W\&. The function takes in all the matrices and only changes the value of the W matrix\&.
.PP
\fBParameters:\fP
.RS 4
\fIV\fP Input matrix to be factorized\&. 
.br
\fIW\fP Basis matrix to be updated\&. 
.br
\fIH\fP Encoding matrix\&. 
.RE
.PP

.PP
Definition at line 69 of file svd_batch_learning\&.hpp\&.
.PP
References kw, momentum, mW, and u\&.
.SH "Member Data Documentation"
.PP 
.SS "double mlpack::amf::SVDBatchLearning::kh\fC [private]\fP"

.PP
Definition at line 142 of file svd_batch_learning\&.hpp\&.
.PP
Referenced by HUpdate()\&.
.SS "double mlpack::amf::SVDBatchLearning::kw\fC [private]\fP"

.PP
Definition at line 141 of file svd_batch_learning\&.hpp\&.
.PP
Referenced by WUpdate()\&.
.SS "double mlpack::amf::SVDBatchLearning::max\fC [private]\fP"

.PP
Definition at line 144 of file svd_batch_learning\&.hpp\&.
.SS "arma::mat mlpack::amf::SVDBatchLearning::mH\fC [private]\fP"

.PP
Definition at line 148 of file svd_batch_learning\&.hpp\&.
.PP
Referenced by HUpdate(), and Initialize()\&.
.SS "double mlpack::amf::SVDBatchLearning::min\fC [private]\fP"

.PP
Definition at line 143 of file svd_batch_learning\&.hpp\&.
.SS "double mlpack::amf::SVDBatchLearning::momentum\fC [private]\fP"

.PP
Definition at line 145 of file svd_batch_learning\&.hpp\&.
.PP
Referenced by HUpdate(), and WUpdate()\&.
.SS "arma::mat mlpack::amf::SVDBatchLearning::mW\fC [private]\fP"

.PP
Definition at line 147 of file svd_batch_learning\&.hpp\&.
.PP
Referenced by Initialize(), and WUpdate()\&.
.SS "double mlpack::amf::SVDBatchLearning::u\fC [private]\fP"

.PP
Definition at line 140 of file svd_batch_learning\&.hpp\&.
.PP
Referenced by HUpdate(), and WUpdate()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
