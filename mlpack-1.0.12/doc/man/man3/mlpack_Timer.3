.TH "mlpack::Timer" 3 "Sat Mar 14 2015" "Version 1.0.12" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::Timer \- 
.PP
The timer class provides a way for MLPACK methods to be timed\&.  

.SH SYNOPSIS
.br
.PP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static timeval \fBGet\fP (const std::string &name)"
.br
.RI "\fIGet the value of the given timer\&. \fP"
.ti -1c
.RI "static void \fBStart\fP (const std::string &name)"
.br
.RI "\fIStart the given timer\&. \fP"
.ti -1c
.RI "static void \fBStop\fP (const std::string &name)"
.br
.RI "\fIStop the given timer\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
The timer class provides a way for MLPACK methods to be timed\&. 

The three methods contained in this class allow a named timer to be started and stopped, and its value to be obtained\&. 
.PP
Definition at line 65 of file timers\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "static timeval mlpack::Timer::Get (const std::string &name)\fC [static]\fP"

.PP
Get the value of the given timer\&. 
.PP
\fBParameters:\fP
.RS 4
\fIname\fP Name of timer to return value of\&. 
.RE
.PP

.SS "static void mlpack::Timer::Start (const std::string &name)\fC [static]\fP"

.PP
Start the given timer\&. If a timer is started, then stopped, then re-started, then re-stopped, the final value of the timer is the length of both runs -- that is, MLPACK timers are additive for each time they are run, and do not reset\&.
.PP
\fBNote:\fP
.RS 4
Undefined behavior will occur if a timer is started twice\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIname\fP Name of timer to be started\&. 
.RE
.PP

.SS "static void mlpack::Timer::Stop (const std::string &name)\fC [static]\fP"

.PP
Stop the given timer\&. 
.PP
\fBNote:\fP
.RS 4
Undefined behavior will occur if a timer is started twice\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIname\fP Name of timer to be stopped\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
