.TH "mlpack::tree::CoverTree< MetricType, RootPointPolicy, StatisticType >::DualTreeTraverser< RuleType >" 3 "Sat Mar 14 2015" "Version 1.0.12" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::tree::CoverTree< MetricType, RootPointPolicy, StatisticType >::DualTreeTraverser< RuleType > \- 
.PP
A dual-tree cover tree traverser; see dual_tree_traverser\&.hpp\&.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBDualCoverTreeMapEntry\fP"
.br
.RI "\fIStruct used for traversal\&. \fP"
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDualTreeTraverser\fP (RuleType &\fBrule\fP)"
.br
.RI "\fIInitialize the dual tree traverser with the given rule type\&. \fP"
.ti -1c
.RI "size_t \fBNumBaseCases\fP () const "
.br
.ti -1c
.RI "size_t \fBNumPrunes\fP () const "
.br
.RI "\fIGet the number of pruned nodes\&. \fP"
.ti -1c
.RI "size_t & \fBNumPrunes\fP ()"
.br
.RI "\fIModify the number of pruned nodes\&. \fP"
.ti -1c
.RI "size_t \fBNumScores\fP () const "
.br
.ti -1c
.RI "size_t \fBNumVisited\fP () const "
.br
.ti -1c
.RI "void \fBTraverse\fP (\fBCoverTree\fP &queryNode, \fBCoverTree\fP &referenceNode)"
.br
.RI "\fITraverse the two specified trees\&. \fP"
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBPruneMap\fP (\fBCoverTree\fP &queryNode, std::map< int, std::vector< \fBDualCoverTreeMapEntry\fP > > &referenceMap, std::map< int, std::vector< \fBDualCoverTreeMapEntry\fP > > &childMap)"
.br
.RI "\fIPrepare map for recursion\&. \fP"
.ti -1c
.RI "void \fBReferenceRecursion\fP (\fBCoverTree\fP &queryNode, std::map< int, std::vector< \fBDualCoverTreeMapEntry\fP > > &referenceMap)"
.br
.ti -1c
.RI "void \fBTraverse\fP (\fBCoverTree\fP &queryNode, std::map< int, std::vector< \fBDualCoverTreeMapEntry\fP > > &referenceMap)"
.br
.RI "\fIHelper function for traversal of the two trees\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "size_t \fBnumPrunes\fP"
.br
.RI "\fIThe number of pruned nodes\&. \fP"
.ti -1c
.RI "RuleType & \fBrule\fP"
.br
.RI "\fIThe instantiated rule set for pruning branches\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename MetricType = metric::LMetric<2, true>, typename RootPointPolicy = FirstPointIsRoot, typename StatisticType = EmptyStatistic>template<typename RuleType>class mlpack::tree::CoverTree< MetricType, RootPointPolicy, StatisticType >::DualTreeTraverser< RuleType >"
A dual-tree cover tree traverser; see dual_tree_traverser\&.hpp\&. 
.PP
Definition at line 216 of file cover_tree\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename MetricType  = metric::LMetric<2, true>, typename RootPointPolicy  = FirstPointIsRoot, typename StatisticType  = EmptyStatistic> template<typename RuleType > \fBmlpack::tree::CoverTree\fP< MetricType, RootPointPolicy, StatisticType >::\fBDualTreeTraverser\fP< RuleType >::\fBDualTreeTraverser\fP (RuleType &rule)"

.PP
Initialize the dual tree traverser with the given rule type\&. 
.SH "Member Function Documentation"
.PP 
.SS "template<typename MetricType  = metric::LMetric<2, true>, typename RootPointPolicy  = FirstPointIsRoot, typename StatisticType  = EmptyStatistic> template<typename RuleType > size_t \fBmlpack::tree::CoverTree\fP< MetricType, RootPointPolicy, StatisticType >::\fBDualTreeTraverser\fP< RuleType >::NumBaseCases () const\fC [inline]\fP"

.PP
Definition at line 50 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::LMetric<2, true>, typename RootPointPolicy  = FirstPointIsRoot, typename StatisticType  = EmptyStatistic> template<typename RuleType > size_t \fBmlpack::tree::CoverTree\fP< MetricType, RootPointPolicy, StatisticType >::\fBDualTreeTraverser\fP< RuleType >::NumPrunes () const\fC [inline]\fP"

.PP
Get the number of pruned nodes\&. 
.PP
Definition at line 42 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::LMetric<2, true>, typename RootPointPolicy  = FirstPointIsRoot, typename StatisticType  = EmptyStatistic> template<typename RuleType > size_t& \fBmlpack::tree::CoverTree\fP< MetricType, RootPointPolicy, StatisticType >::\fBDualTreeTraverser\fP< RuleType >::NumPrunes ()\fC [inline]\fP"

.PP
Modify the number of pruned nodes\&. 
.PP
Definition at line 44 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::LMetric<2, true>, typename RootPointPolicy  = FirstPointIsRoot, typename StatisticType  = EmptyStatistic> template<typename RuleType > size_t \fBmlpack::tree::CoverTree\fP< MetricType, RootPointPolicy, StatisticType >::\fBDualTreeTraverser\fP< RuleType >::NumScores () const\fC [inline]\fP"

.PP
Definition at line 49 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::LMetric<2, true>, typename RootPointPolicy  = FirstPointIsRoot, typename StatisticType  = EmptyStatistic> template<typename RuleType > size_t \fBmlpack::tree::CoverTree\fP< MetricType, RootPointPolicy, StatisticType >::\fBDualTreeTraverser\fP< RuleType >::NumVisited () const\fC [inline]\fP"

.PP
Definition at line 48 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::LMetric<2, true>, typename RootPointPolicy  = FirstPointIsRoot, typename StatisticType  = EmptyStatistic> template<typename RuleType > void \fBmlpack::tree::CoverTree\fP< MetricType, RootPointPolicy, StatisticType >::\fBDualTreeTraverser\fP< RuleType >::PruneMap (\fBCoverTree\fP &queryNode, std::map< int, std::vector< \fBDualCoverTreeMapEntry\fP > > &referenceMap, std::map< int, std::vector< \fBDualCoverTreeMapEntry\fP > > &childMap)\fC [private]\fP"

.PP
Prepare map for recursion\&. 
.SS "template<typename MetricType  = metric::LMetric<2, true>, typename RootPointPolicy  = FirstPointIsRoot, typename StatisticType  = EmptyStatistic> template<typename RuleType > void \fBmlpack::tree::CoverTree\fP< MetricType, RootPointPolicy, StatisticType >::\fBDualTreeTraverser\fP< RuleType >::ReferenceRecursion (\fBCoverTree\fP &queryNode, std::map< int, std::vector< \fBDualCoverTreeMapEntry\fP > > &referenceMap)\fC [private]\fP"

.SS "template<typename MetricType  = metric::LMetric<2, true>, typename RootPointPolicy  = FirstPointIsRoot, typename StatisticType  = EmptyStatistic> template<typename RuleType > void \fBmlpack::tree::CoverTree\fP< MetricType, RootPointPolicy, StatisticType >::\fBDualTreeTraverser\fP< RuleType >::Traverse (\fBCoverTree\fP &queryNode, \fBCoverTree\fP &referenceNode)"

.PP
Traverse the two specified trees\&. 
.PP
\fBParameters:\fP
.RS 4
\fIqueryNode\fP Root of query tree\&. 
.br
\fIreferenceNode\fP Root of reference tree\&. 
.RE
.PP

.SS "template<typename MetricType  = metric::LMetric<2, true>, typename RootPointPolicy  = FirstPointIsRoot, typename StatisticType  = EmptyStatistic> template<typename RuleType > void \fBmlpack::tree::CoverTree\fP< MetricType, RootPointPolicy, StatisticType >::\fBDualTreeTraverser\fP< RuleType >::Traverse (\fBCoverTree\fP &queryNode, std::map< int, std::vector< \fBDualCoverTreeMapEntry\fP > > &referenceMap)\fC [private]\fP"

.PP
Helper function for traversal of the two trees\&. 
.SH "Member Data Documentation"
.PP 
.SS "template<typename MetricType  = metric::LMetric<2, true>, typename RootPointPolicy  = FirstPointIsRoot, typename StatisticType  = EmptyStatistic> template<typename RuleType > size_t \fBmlpack::tree::CoverTree\fP< MetricType, RootPointPolicy, StatisticType >::\fBDualTreeTraverser\fP< RuleType >::numPrunes\fC [private]\fP"

.PP
The number of pruned nodes\&. 
.PP
Definition at line 57 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::LMetric<2, true>, typename RootPointPolicy  = FirstPointIsRoot, typename StatisticType  = EmptyStatistic> template<typename RuleType > RuleType& \fBmlpack::tree::CoverTree\fP< MetricType, RootPointPolicy, StatisticType >::\fBDualTreeTraverser\fP< RuleType >::rule\fC [private]\fP"

.PP
The instantiated rule set for pruning branches\&. 
.PP
Definition at line 54 of file dual_tree_traverser\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
