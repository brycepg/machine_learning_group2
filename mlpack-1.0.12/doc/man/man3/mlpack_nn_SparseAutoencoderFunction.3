.TH "mlpack::nn::SparseAutoencoderFunction" 3 "Sat Mar 14 2015" "Version 1.0.12" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::nn::SparseAutoencoderFunction \- 
.PP
This is a class for the sparse autoencoder objective function\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSparseAutoencoderFunction\fP (const arma::mat &\fBdata\fP, const size_t \fBvisibleSize\fP, const size_t \fBhiddenSize\fP, const double \fBlambda\fP=0\&.0001, const double \fBbeta\fP=3, const double \fBrho\fP=0\&.01)"
.br
.RI "\fIConstruct the sparse autoencoder objective function with the given parameters\&. \fP"
.ti -1c
.RI "void \fBBeta\fP (const double b)"
.br
.RI "\fISets the KL divergence parameter\&. \fP"
.ti -1c
.RI "double \fBBeta\fP () const "
.br
.RI "\fIGets the KL divergence parameter\&. \fP"
.ti -1c
.RI "double \fBEvaluate\fP (const arma::mat &parameters) const "
.br
.RI "\fIEvaluates the objective function of the sparse autoencoder model using the given parameters\&. \fP"
.ti -1c
.RI "const arma::mat & \fBGetInitialPoint\fP () const "
.br
.RI "\fIReturn the initial point for the optimization\&. \fP"
.ti -1c
.RI "void \fBGradient\fP (const arma::mat &parameters, arma::mat &gradient) const "
.br
.RI "\fIEvaluates the gradient values of the objective function given the current set of parameters\&. \fP"
.ti -1c
.RI "void \fBHiddenSize\fP (const size_t hidden)"
.br
.RI "\fISets size of the hidden layer\&. \fP"
.ti -1c
.RI "size_t \fBHiddenSize\fP () const "
.br
.RI "\fIGets the size of the hidden layer\&. \fP"
.ti -1c
.RI "const arma::mat \fBInitializeWeights\fP ()"
.br
.RI "\fIInitializes the parameters of the model to suitable values\&. \fP"
.ti -1c
.RI "void \fBLambda\fP (const double l)"
.br
.RI "\fISets the L2-regularization parameter\&. \fP"
.ti -1c
.RI "double \fBLambda\fP () const "
.br
.RI "\fIGets the L2-regularization parameter\&. \fP"
.ti -1c
.RI "void \fBRho\fP (const double r)"
.br
.RI "\fISets the sparsity parameter\&. \fP"
.ti -1c
.RI "double \fBRho\fP () const "
.br
.RI "\fIGets the sparsity parameter\&. \fP"
.ti -1c
.RI "void \fBSigmoid\fP (const arma::mat &x, arma::mat &output) const "
.br
.RI "\fIReturns the elementwise sigmoid of the passed matrix, where the sigmoid function of a real number 'x' is [1 / (1 + exp(-x))]\&. \fP"
.ti -1c
.RI "void \fBVisibleSize\fP (const size_t visible)"
.br
.RI "\fISets size of the visible layer\&. \fP"
.ti -1c
.RI "size_t \fBVisibleSize\fP () const "
.br
.RI "\fIGets size of the visible layer\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "double \fBbeta\fP"
.br
.RI "\fIKL divergence parameter\&. \fP"
.ti -1c
.RI "const arma::mat & \fBdata\fP"
.br
.RI "\fIThe matrix of data points\&. \fP"
.ti -1c
.RI "size_t \fBhiddenSize\fP"
.br
.RI "\fISize of the hidden layer\&. \fP"
.ti -1c
.RI "arma::mat \fBinitialPoint\fP"
.br
.RI "\fIIntial parameter vector\&. \fP"
.ti -1c
.RI "double \fBlambda\fP"
.br
.RI "\fIL2-regularization parameter\&. \fP"
.ti -1c
.RI "double \fBrho\fP"
.br
.RI "\fISparsity parameter\&. \fP"
.ti -1c
.RI "size_t \fBvisibleSize\fP"
.br
.RI "\fISize of the visible layer\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
This is a class for the sparse autoencoder objective function\&. 

It can be used to create learning models like self-taught learning, stacked autoencoders, conditional random fields (CRFs), and so forth\&. 
.PP
Definition at line 28 of file sparse_autoencoder_function\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "mlpack::nn::SparseAutoencoderFunction::SparseAutoencoderFunction (const arma::mat &data, const size_tvisibleSize, const size_thiddenSize, const doublelambda = \fC0\&.0001\fP, const doublebeta = \fC3\fP, const doublerho = \fC0\&.01\fP)"

.PP
Construct the sparse autoencoder objective function with the given parameters\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP The data matrix\&. 
.br
\fIvisibleSize\fP Size of input vector expected at the visible layer\&. 
.br
\fIhiddenSize\fP Size of input vector expected at the hidden layer\&. 
.br
\fIlambda\fP L2-regularization parameter\&. 
.br
\fIbeta\fP KL divergence parameter\&. 
.br
\fIrho\fP Sparsity parameter\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void mlpack::nn::SparseAutoencoderFunction::Beta (const doubleb)\fC [inline]\fP"

.PP
Sets the KL divergence parameter\&. 
.PP
Definition at line 126 of file sparse_autoencoder_function\&.hpp\&.
.PP
References beta\&.
.SS "double mlpack::nn::SparseAutoencoderFunction::Beta () const\fC [inline]\fP"

.PP
Gets the KL divergence parameter\&. 
.PP
Definition at line 132 of file sparse_autoencoder_function\&.hpp\&.
.PP
References beta\&.
.SS "double mlpack::nn::SparseAutoencoderFunction::Evaluate (const arma::mat &parameters) const"

.PP
Evaluates the objective function of the sparse autoencoder model using the given parameters\&. The cost function has terms for the reconstruction error, regularization cost and the sparsity cost\&. The objective function takes a low value when the model is able to reconstruct the data well using weights which are low in value and when the average activations of neurons in the hidden layers agrees well with the sparsity parameter 'rho'\&.
.PP
\fBParameters:\fP
.RS 4
\fIparameters\fP Current values of the model parameters\&. 
.RE
.PP

.SS "const arma::mat& mlpack::nn::SparseAutoencoderFunction::GetInitialPoint () const\fC [inline]\fP"

.PP
Return the initial point for the optimization\&. 
.PP
Definition at line 87 of file sparse_autoencoder_function\&.hpp\&.
.PP
References initialPoint\&.
.SS "void mlpack::nn::SparseAutoencoderFunction::Gradient (const arma::mat &parameters, arma::mat &gradient) const"

.PP
Evaluates the gradient values of the objective function given the current set of parameters\&. The function performs a feedforward pass and computes the error in reconstructing the data points\&. It then uses the backpropagation algorithm to compute the gradient values\&.
.PP
\fBParameters:\fP
.RS 4
\fIparameters\fP Current values of the model parameters\&. 
.br
\fIgradient\fP Matrix where gradient values will be stored\&. 
.RE
.PP

.SS "void mlpack::nn::SparseAutoencoderFunction::HiddenSize (const size_thidden)\fC [inline]\fP"

.PP
Sets size of the hidden layer\&. 
.PP
Definition at line 102 of file sparse_autoencoder_function\&.hpp\&.
.SS "size_t mlpack::nn::SparseAutoencoderFunction::HiddenSize () const\fC [inline]\fP"

.PP
Gets the size of the hidden layer\&. 
.PP
Definition at line 108 of file sparse_autoencoder_function\&.hpp\&.
.PP
References hiddenSize\&.
.SS "const arma::mat mlpack::nn::SparseAutoencoderFunction::InitializeWeights ()"

.PP
Initializes the parameters of the model to suitable values\&. 
.SS "void mlpack::nn::SparseAutoencoderFunction::Lambda (const doublel)\fC [inline]\fP"

.PP
Sets the L2-regularization parameter\&. 
.PP
Definition at line 114 of file sparse_autoencoder_function\&.hpp\&.
.PP
References lambda\&.
.SS "double mlpack::nn::SparseAutoencoderFunction::Lambda () const\fC [inline]\fP"

.PP
Gets the L2-regularization parameter\&. 
.PP
Definition at line 120 of file sparse_autoencoder_function\&.hpp\&.
.PP
References lambda\&.
.SS "void mlpack::nn::SparseAutoencoderFunction::Rho (const doubler)\fC [inline]\fP"

.PP
Sets the sparsity parameter\&. 
.PP
Definition at line 138 of file sparse_autoencoder_function\&.hpp\&.
.PP
References rho\&.
.SS "double mlpack::nn::SparseAutoencoderFunction::Rho () const\fC [inline]\fP"

.PP
Gets the sparsity parameter\&. 
.PP
Definition at line 144 of file sparse_autoencoder_function\&.hpp\&.
.PP
References rho\&.
.SS "void mlpack::nn::SparseAutoencoderFunction::Sigmoid (const arma::mat &x, arma::mat &output) const\fC [inline]\fP"

.PP
Returns the elementwise sigmoid of the passed matrix, where the sigmoid function of a real number 'x' is [1 / (1 + exp(-x))]\&. 
.PP
\fBParameters:\fP
.RS 4
\fIx\fP Matrix of real values for which we require the sigmoid activation\&. 
.RE
.PP

.PP
Definition at line 81 of file sparse_autoencoder_function\&.hpp\&.
.SS "void mlpack::nn::SparseAutoencoderFunction::VisibleSize (const size_tvisible)\fC [inline]\fP"

.PP
Sets size of the visible layer\&. 
.PP
Definition at line 90 of file sparse_autoencoder_function\&.hpp\&.
.SS "size_t mlpack::nn::SparseAutoencoderFunction::VisibleSize () const\fC [inline]\fP"

.PP
Gets size of the visible layer\&. 
.PP
Definition at line 96 of file sparse_autoencoder_function\&.hpp\&.
.PP
References visibleSize\&.
.SH "Member Data Documentation"
.PP 
.SS "double mlpack::nn::SparseAutoencoderFunction::beta\fC [private]\fP"

.PP
KL divergence parameter\&. 
.PP
Definition at line 161 of file sparse_autoencoder_function\&.hpp\&.
.PP
Referenced by Beta()\&.
.SS "const arma::mat& mlpack::nn::SparseAutoencoderFunction::data\fC [private]\fP"

.PP
The matrix of data points\&. 
.PP
Definition at line 151 of file sparse_autoencoder_function\&.hpp\&.
.SS "size_t mlpack::nn::SparseAutoencoderFunction::hiddenSize\fC [private]\fP"

.PP
Size of the hidden layer\&. 
.PP
Definition at line 157 of file sparse_autoencoder_function\&.hpp\&.
.PP
Referenced by HiddenSize()\&.
.SS "arma::mat mlpack::nn::SparseAutoencoderFunction::initialPoint\fC [private]\fP"

.PP
Intial parameter vector\&. 
.PP
Definition at line 153 of file sparse_autoencoder_function\&.hpp\&.
.PP
Referenced by GetInitialPoint()\&.
.SS "double mlpack::nn::SparseAutoencoderFunction::lambda\fC [private]\fP"

.PP
L2-regularization parameter\&. 
.PP
Definition at line 159 of file sparse_autoencoder_function\&.hpp\&.
.PP
Referenced by Lambda()\&.
.SS "double mlpack::nn::SparseAutoencoderFunction::rho\fC [private]\fP"

.PP
Sparsity parameter\&. 
.PP
Definition at line 163 of file sparse_autoencoder_function\&.hpp\&.
.PP
Referenced by Rho()\&.
.SS "size_t mlpack::nn::SparseAutoencoderFunction::visibleSize\fC [private]\fP"

.PP
Size of the visible layer\&. 
.PP
Definition at line 155 of file sparse_autoencoder_function\&.hpp\&.
.PP
Referenced by VisibleSize()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
